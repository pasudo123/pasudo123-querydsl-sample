plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}

group = 'edu.pasudo123.querydsl'
version = '1.0.'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

/**
 * reference : https://github.com/kadtewsd/java11QueryDSL/blob/master/build.gradle
 */

def queryDslDir = './out/production/classes/generated'
def queryDslOutput = file("${queryDslDir}")
sourceSets {
    main {
        java {
            srcDir queryDslDir
        }
    }
}

def queryDSLVersion = "4.2.1"
dependencies {
    compile "com.querydsl:querydsl-jpa:${queryDSLVersion}"
    compile "com.querydsl:querydsl-core:${queryDSLVersion}"
    compile "com.querydsl:querydsl-sql:${queryDSLVersion}"

    annotationProcessor(
            "com.querydsl:querydsl-apt:${queryDSLVersion}"
    )

}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    /**
     *
     * querydsl 사용을 위한 라이브러리 추가.
     *
     * - https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
     * - https://mvnrepository.com/artifact/com.querydsl/querydsl-apt
     * - https://mvnrepository.com/artifact/com.querydsl/querydsl-core
     * - https://mvnrepository.com/artifact/com.querydsl/querydsl-sql
     *
     */
    compile "com.querydsl:querydsl-jpa:4.2.1"
    compile "com.querydsl:querydsl-apt:4.2.1"
    compile "com.querydsl:querydsl-core:4.2.1"
    compile "com.querydsl:querydsl-sql:4.2.1"

}

def gradleGenerateDir = "./build/generated/sources/apt"
def gradleQueryDslOutput = file("${gradleGenerateDir}")

task cleanUpQueryDsl(type: Copy) {
    from "${gradleGenerateDir}/main"
    into "${queryDslDir}"
    doLast {
        delete gradleQueryDslOutput
    }
}

compileJava.finalizedBy(cleanUpQueryDsl)

clean {
    delete gradleQueryDslOutput
    delete queryDslOutput
}