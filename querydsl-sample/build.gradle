
buildscript {
    ext {
        querydslPluginVersion = '1.0.10'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" } // plugin 저장소
    }
    dependencies {
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")

    }
}

plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
}


group = 'edu.pasudo123.querydsl'
version = '1.0.0'
sourceCompatibility = '1.8'

apply plugin: "com.ewerk.gradle.plugins.querydsl"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext{
    queryDslVersion = "4.1.3"
}

dependencies {
    
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    /**
     *
     * querydsl 사용을 위한 라이브러리 추가.
     *
     * - https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa
     * - https://mvnrepository.com/artifact/com.querydsl/querydsl-apt
     * - https://mvnrepository.com/artifact/com.querydsl/querydsl-core
     * - https://mvnrepository.com/artifact/com.querydsl/querydsl-sql
     *
     */
    compile "com.querydsl:querydsl-jpa:${queryDslVersion}"
    compile "com.querydsl:querydsl-apt:${queryDslVersion}"
}

/** querydsl 적용하는 부분 **/
apply plugin: "com.ewerk.gradle.plugins.querydsl"
def queryDslSrcDir = 'src/main/generated'

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = queryDslSrcDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', queryDslSrcDir]
        }
    }
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}